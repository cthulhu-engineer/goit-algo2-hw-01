def find_min_max(arr):
    """
    Find the minimum and maximum values in a list using a divide-and-conquer approach.

    :param arr: List of numbers.
    :return: Tuple (min_value, max_value).
    """
    # Check if the list is empty
    if not arr:
        raise ValueError("The list cannot be empty")
    
    # Base cases
    if len(arr) == 1:  # Only one element
        return arr[0], arr[0]
    
    if len(arr) == 2:  # Two elements
        return (arr[0], arr[1]) if arr[0] < arr[1] else (arr[1], arr[0])
    
    # Divide the list into two parts
    mid = len(arr) // 2
    left_min, left_max = find_min_max(arr[:mid])
    right_min, right_max = find_min_max(arr[mid:])
    
    # Combine results from both parts
    return min(left_min, right_min), max(left_max, right_max)

# Example usage
if __name__ == "__main__":
    arr = [12, 54, 14, 56, 390, 32, 56]
    try:
        result = find_min_max(arr)
        print(f"Minimum: {result[0]}, Maximum: {result[1]}")
    except ValueError as e:
        print(f"Error: {e}")
